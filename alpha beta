import sys

MAX, MIN = 1000, -1000

def minimax(depth, nodeIndex, maximizingPlayer, values, alpha, beta):
    if depth == 3:
        return values[nodeIndex]
    if maximizingPlayer:
        best = MIN
        for i in range(0, 2):
            val = minimax(depth + 1, nodeIndex * 2 + i, False, values, alpha, beta)
            best = max(best, val)
            alpha = max(alpha, best)
            if beta <= alpha:
                break
        return best
    else:
        best = MAX
        for i in range(0, 2):
            val = minimax(depth + 1, nodeIndex * 2 + i, True, values, alpha, beta)
            best = min(best, val)
            beta = min(beta, best)
            if beta <= alpha:
                break
        return best

if __name__ == "__main__":
    # Taking input from the user
    values = list(map(int, input("Enter the leaf node values separated by spaces: ").split()))
    if len(values) != 8:
        print("Error: Please enter exactly 8 values.")
    else:
        print("The optimal value is:", minimax(0, 0, True, values, MIN, MAX))

        # Print the graph
        print("Graph:")
        print("     0")
        print("   /   \\")
        print("  1     2")
        print(" / \\   / \\")
        print("3   4 5   6")
        print("/ \\ / \\ / \\")
        print("7 8 9 10 11 12 13 14")
